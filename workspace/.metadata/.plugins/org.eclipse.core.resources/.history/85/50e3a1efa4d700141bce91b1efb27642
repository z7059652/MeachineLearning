package TestJava;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.nio.file.Files;

import com.aliasi.classify.*;
import com.aliasi.tokenizer.*;
/* 使用 Lingpipe的TF/IDF分类器训练语料
 * 
 * @author laigood
 */
public class TrainTClassifier
{

	//训练语料文件夹
	private static String[] Path  = {"D:\\visual studio 2013\\Projects\\TextDeal\\Sentiment\\cn_sample_data\\sample.positive.temp.text.nonum.txt","D:\\visual studio 2013\\Projects\\TextDeal\\Sentiment\\cn_sample_data\\sample.negative.temp.text.nonum.txt"};
	//定义分类
	private static String[] CATEGORIES = { "positive", "negative" };
	
	public static void main(String[] args) throws ClassNotFoundException,IOException 
	{
		
		TfIdfClassifierTrainer<CharSequence> classifier = new TfIdfClassifierTrainer<CharSequence>(
				new TokenFeatureExtractor(CharacterTokenizerFactory.INSTANCE));

		// 开始训练
//		for (int i = 0; i < CATEGORIES.length; i++)
//		{
//			File classDir = new File(TDIR, CATEGORIES[i]);
//			if (!classDir.isDirectory())
//			{
//				System.out.println("不能找到目录=" + classDir);
//			}
//			// 训练器遍历分类文件夹下的所有文件
//			for (File file : classDir.listFiles())
//			{
//				String text = Files.readFromFile(file, "utf-8");
////				file.getPath();
////				String str = Files.readAllLines(file.getPath(), "utf-8");
////				Files.r
//				System.out.println("正在训练 " + CATEGORIES[i] + file.getName());
//				Classification classification = new Classification(CATEGORIES[i]);
//				Classified<CharSequence> classified = new Classified<CharSequence>(text, classification);
//				classifier.handle(classified);
//			} 
//		}	
		
		
		//读取文件 
//		String path = "D:\\visual studio 2013\\Projects\\TextDeal\\Sentiment\\cn_sample_data\\sample.negative.temp.nonum.txt";
		for (int i = 0; i < CATEGORIES.length; i++)
		{   
			File file = new File(Path[i]);
			if(!file.exists() || file.isDirectory())
				throw new FileNotFoundException();
			BufferedReader br = new BufferedReader(new FileReader(file));
			String temp=null;
//	        StringBuffer sb=new StringBuffer();
	        temp=br.readLine();
	        while(temp!=null)
	        {
				Classification classification = new Classification(CATEGORIES[i]);
				System.out.println("正在训练 " + CATEGORIES[i] + temp);
				Classified<CharSequence> classified = new Classified<CharSequence>(temp, classification);
				classifier.handle(classified);
				temp=br.readLine();
	        }
	        br.close();
		}
		// 把分类器模型写到文件上
		System.out.println("开始生成分类器");
		String modelFile = "E:\\data\\category\\tclassifier";
		ObjectOutputStream os = new ObjectOutputStream(new FileOutputStream(modelFile));
		classifier.compileTo(os);
		os.close();
		
		System.out.println("分类器生成完成");
	}
	public static String ReadFile(String path) throws IOException
	{
		File file = new File(path);
		if(!file.exists() || file.isDirectory())
			throw new FileNotFoundException();
		BufferedReader br = new BufferedReader(new FileReader(file));
		String temp=null;
        StringBuffer sb=new StringBuffer();
        temp=br.readLine();
        while(temp!=null)
        {
            sb.append(temp+" ");
            temp=br.readLine();
        }
        br.close();
        return sb.toString();
	}
}